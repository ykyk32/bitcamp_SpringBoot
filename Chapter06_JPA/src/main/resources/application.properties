# server
#server.address=localhost
#server.port=8080

# MySQL
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/mydb?serverTimezone=Asia/Seoul
#spring.datasource.username=root
#spring.datasource.password=1234

#JPA
# 스키마 생성, create: 기존 테이블이 있으면 삭제 후 생성, update:변경된 부분만 반영
#spring.jpa.hibernate.ddl-auto=update

# DDL 생성 시 데이터 베이스 고유의 기능을 사용하는가?
#spring.jpa.generate-ddl=true

#api 호출시 실행되는 sql 문은 콘솔에 보여 줄 것인가?
#spring.jpa.show-sql=true

# 사용할 데이터베이스
#spring.jpa.database=mysql

# mysql 상세 지정
#spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

#######################################################

#Oracle

## server port
server.address=localhost
server.port=8080

##prefix & suffix(JSP)
spring.mvc.view.prefix=/WEB-INF/
spring.mvc.view.suffix=.jsp

#MyBatis

# database
mybatis.type-aliases-package=com.springboot.main
mybatis.mapper-locations=classpath:mapper/**/*.xml
mybatis.config-location=classpath:mybatis-config.xml

#Oracle
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=c##java
spring.datasource.password=bit

spring.jpa.hibernate.ddl-auto=update
# DDL 생성 시 데이터 베이스 고유의 기능을 사용하는가?
spring.jpa.generate-ddl=true
#api 호출시 실행되는 sql 문은 콘솔에 보여 줄 것인가?
spring.jpa.show-sql=true

#사용할 데이터베이스
spring.jpa.database=oracle

spring.jpa.properties.hibernate.format_sql=true

#Oracle 상세지정
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect

spring.servlet.multipart.max-file-size=5MB

